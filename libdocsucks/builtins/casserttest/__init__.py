# -*- coding: utf-8 -*-
#
# libdocsucks -- generate tests for code in documentation
#
# Copyright 2017 Richard Liebscher.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

from os import path
import libdocsucks

import libdocsucks.utils.mustache as mustache
from libdocsucks import TestCodeGenerator, registry, ConfigValue
from libdocsucks.builtins.cpp.test import CppTestGenerator

CASSERT_TEMPLATE = """\
// generated by {{docsucks}}
{{includes}}

{{usings}}

int main()
{
  {{#testCases}}  
  {
    ::docsucks::test_case _docsucks_test_case_;
    try { 
      {{#testCase}}   
      {{code}}
      
      assert(strcmp({{stdout_exp}}, _docsucks_test_case_.get_stdout().c_str()) == 0);
      _docsucks_test_case_.reset();
      {{/testCase}}
    } catch(...) {
      assert(false && "exception in test case");
    }
  }    
  {{/testCases}}    
}
"""

class CppAssertTest(CppTestGenerator):

  def __init__(self):
    super(CppAssertTest, self).__init__("casserttest", "C++ Assert Test")

    self.template = mustache.parse(CASSERT_TEMPLATE)
    self.required_includes = [
      path.join(path.dirname(__file__), "casserttest.h"), "iostream"
    ]


registry.registerGenerator(CppAssertTest())
registry.setDefaultGenerator("c", "casserttest")
registry.setDefaultGenerator("c++", "casserttest")
